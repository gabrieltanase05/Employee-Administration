{"version":3,"sources":["App.js","index.js"],"names":["App","useState","employees","setEmployees","requestCount","setRequestCount","update","setUpdate","useForm","register","handleSubmit","useEffect","axios","get","then","res","prevState","data","console","log","catch","error","editEmployee","e","editableEmployee","document","querySelector","currentTarget","value","editableFields","querySelectorAll","i","length","post","id","name","innerHTML","salary","age","err","contentEditable","innerText","classList","remove","focus","add","deleteEmployee","delete","className","onSubmit","preventDefault","alert","target","reset","ref","required","min","max","pattern","type","placeholder","onChange","map","employee","index","e_id","_id","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b43483f7.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport axios from 'axios';\n\nfunction App() {\n    const [employees, setEmployees] = useState([]);\n    const [requestCount, setRequestCount] = useState(0);\n    const [update, setUpdate] = useState(false);\n    const {register, handleSubmit} = useForm();\n\n    useEffect(()=> {\n        //Fetch the employees list from MongoDB\n        axios.get('https://employee-administration-bend.herokuapp.com/api/GET')\n        .then(res => {\n            // Handle success response\n            setEmployees(prevState => (res.data.data))\n            console.log(res.data.data);\n            console.log(requestCount)\n          })\n          .catch(error => {\n            // Handle error\n            console.log(`Load employees list ${error}`);\n          })\n    }, [requestCount])\n\n    //Add new employees to the DB, using Hook Form to catch\n    //the form input values\n    const addEmployee =(data, e) => {\n        e.preventDefault();\n        if(data){\n            axios.post('https://employee-administration-bend.herokuapp.com/api/POST', data)\n            .then((res => {\n                alert(`${data.name} was added to the employees list.`)\n                setRequestCount(requestCount+1);\n            }))\n            .catch(err => {\n                console.log(`Unable to add new employee ${err}`)\n            })\n        }\n        e.target.reset();\n    }\n\n    //Edit and update the employee row\n    const editEmployee = (e) => {\n        let editableEmployee = document.querySelector(`[e_id=\"${e.currentTarget.value}\"]`)\n        let editableFields = editableEmployee.querySelectorAll('[type]')\n        for( let i =0; i < editableFields.length; i++) {\n            if(update){\n                axios.post(\"https://employee-administration-bend.herokuapp.com/api/UPDATE/\", {\n                    id: e.currentTarget.value,\n                    name: editableEmployee.querySelector(`[type=\"name\"]`).innerHTML,\n                    salary: editableEmployee.querySelector(`[type=\"salary\"]`).innerHTML,\n                    age: editableEmployee.querySelector(`[type=\"age\"]`).innerHTML\n                }).then(res =>{\n                    setRequestCount(requestCount+1);\n                })\n                    .catch(err => err);\n                editableFields[i].contentEditable= false;\n                e.currentTarget.innerText=\"Edit\";\n                e.currentTarget.classList.remove('AdministrationPanel__done');\n                setUpdate(false);\n            }   else {\n                editableFields[i].contentEditable= true;\n                editableFields[0].focus();\n                e.currentTarget.innerText=\"Done\";\n                e.currentTarget.classList.add('AdministrationPanel__done');\n                setUpdate(true);\n            }\n        }\n    }\n\n    //Delete an employee from DB\n    const deleteEmployee = (e) => {\n        axios.delete(\"https://employee-administration-bend.herokuapp.com/api/DELETE/\", {\n                data:{\n                    id: e.currentTarget.value\n                }\n        })\n        .then(res =>{\n            setRequestCount(requestCount+1);\n        })\n            .catch(err => err);;\n    }\n\n    return (\n        <div className=\"AdministrationPanel\">\n            <div className=\"AdministrationPanel__container\">\n                <h2 className=\"AdministrationPanel__title\"> Employees administration panel</h2>\n                <form className=\"AdministrationPanel__form\" onSubmit={handleSubmit(addEmployee)}>\n                    <input ref={register({required: true, min: 5, max: 20, pattern: /[A-Za-z]/g})} type={'text'} name={'name'} placeholder={'Employee name'} onChange={null}/>\n                    <input ref={register({required: true})} type={'number'} name={'salary'} placeholder={'Employee salary '} onChange={null}/>\n                    <input ref={register({required: true})} type={'number'} name={'age'} placeholder={'Employee age '} onChange={null}/>\n                    <label>\n                        <input type={'submit'} name={'submit'} value=\"+ ADD\" />\n                    </label>\n                </form>\n                <table className=\"AdministrationPanel__table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Salary</th>\n                            <th>Age</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            employees.map((employee,index)=>{\n                                return (\n                                    <tr key={employee._id} e_id={employee._id}>\n                                        <td>{index+1}</td>\n                                        <td type={'name'} >{employee.name}</td>\n                                        <td type={'salary'} >{employee.salary}</td>\n                                        <td type={'age'} >{employee.age}</td>\n                                        <td>\n                                            <button className=\"AdministrationPanel__edit\" onClick={editEmployee} value={employee._id}>Edit</button>\n                                            <button className=\"AdministrationPanel__delete\" onClick={deleteEmployee} value={employee._id}>Delete</button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}